diff a/iOS/MyStudies/MyStudies/Controllers/StudyUI/ActivityUI/QuestionStepController/TextChoiceQuestionController.swift b/iOS/MyStudies/MyStudies/Controllers/StudyUI/ActivityUI/QuestionStepController/TextChoiceQuestionController.swift	(rejected hunks)
@@ -246,60 +246,98 @@ class TextChoiceQuestionController: ORKQuestionStepViewController {
 
   }
 
-  /// Ready the view
-  private func stepDidChange() {
-
-    guard let step = self.step as? QuestionStep, isViewLoaded else {
-      return
-    }
-    self.questionStep = step
-    self.textChoices = answerFormat?.textChoices ?? []
-
-    self.otherChoice = step.otherChoice
-
-    if let indexOfOtherChoiceValue = self.answers?.firstIndex(of: self.otherChoice.value) {
-      self.answers?.remove(at: indexOfOtherChoiceValue)
-    }
-    /// Update the selected result here
-    if let answers = self.answers {
-      for answer in answers {
-        if let selectedChoice = self.textChoices.filter({ $0.value as! String == answer })
-          .first
-        {
-          self.selectedChoices.append(selectedChoice)
-        } else {  // unable to find the answer in textchoices, perhaps other choice was selected
-          self.isOtherCellSelected = true
-          self.otherChoice.otherChoiceText = answer
+    /// Ready the view
+    private func stepDidChange() {
+        
+        guard let step = self.step as? QuestionStep, isViewLoaded else {
+            return
+        }
+        self.questionStep = step
+        self.textChoices = answerFormat?.textChoices ?? []
+        
+        self.otherChoice = step.otherChoice
+        
+        if let indexOfOtherChoiceValue = self.answers?.firstIndex(of: self.otherChoice.value) {
+            self.answers?.remove(at: indexOfOtherChoiceValue)
+        }
+        /// Update the selected result here
+        if let answers = self.answers {
+            for answer in answers {
+                if let selectedChoice = self.textChoices.filter({ $0.value as! String == answer })
+                    .first
+                {
+                    self.selectedChoices.append(selectedChoice)
+                } else {  // unable to find the answer in textchoices, perhaps other choice was selected
+                    self.isOtherCellSelected = true
+                    self.otherChoice.otherChoiceText = answer
+                }
+            }
+            self.answers = nil
+        }
+        
+        // Get the ref of the super class table view
+        if let tableView = self.view.allSubViewsOf(type: UITableView.self).first {
+            self.tableView = tableView
+            tableView.registerCell(cell: TextChoiceCell.self)
+            tableView.registerCell(cell: OtherTextChoiceCell.self)
+            tableView.isHidden = true
+        }
+        
+        if self.isShowSearchBar {
+            self.searchBar = UISearchBar()
+            searchBar?.delegate = self
+        }
+        
+        // Try to get the ref of the continue of the next button
+        if let nextBtn = self.view.allSubViewsOf(type: ORKContinueButton.self).last {
+            self.continueBtn = nextBtn
+            
+            //        if #available(iOS 15, *) {
+            if self.questionStep?.isOptional ?? false {
+                self.continueBtn?.setTitle("Next", for: .normal)
+            }
+            //        }
+            
+            continueBtn?.addTarget(
+                self,
+                action: #selector(didTapOnDoneOrNextBtn),
+                for: .touchUpInside
+            )
+        } else {
+            //      fatalError("Couldn't able to find continue Button")
+        }
+        
+        if super.hasPreviousStep() {
+            
+            if navigationItem.leftBarButtonItem == nil {
+                let view = UIView(frame: CGRect(x: 0, y: 0, width: 26, height: 26))
+                
+                //        Filter Button
+                let backButton = addBackButton()
+                backButton.clipsToBounds = true
+                view.addSubview(backButton)
+                backButton.isExclusiveTouch = true
+                
+                let barButton = UIBarButtonItem(customView: view)
+                navigationItem.leftBarButtonItem = barButton
+            }
+        }
+        
+    }
+        func addBackButton() -> UIButton {
+          let backButton = UIButton(type: .custom)
+          backButton.setImage(
+            UIImage(named: "leftIconBlue"),
+            for: UIControl.State.normal
+          )
+          backButton.addTarget(self, action: #selector(backAction(_:)), for: .touchUpInside)
+          backButton.frame = CGRect(x: -20, y: 0, width: 52, height: 26)
+          return backButton
+        }
+        
+        @IBAction func backAction(_: UIBarButtonItem) {
+            super.goBackward()
         }
-      }
-      self.answers = nil
-    }
-
-    // Get the ref of the super class table view
-    if let tableView = self.view.allSubViewsOf(type: UITableView.self).first {
-      self.tableView = tableView
-      tableView.registerCell(cell: TextChoiceCell.self)
-      tableView.registerCell(cell: OtherTextChoiceCell.self)
-      tableView.isHidden = true
-    }
-
-    if self.isShowSearchBar {
-      self.searchBar = UISearchBar()
-      searchBar?.delegate = self
-    }
-
-    // Try to get the ref of the continue of the next button
-    if let nextBtn = self.view.allSubViewsOf(type: ORKContinueButton.self).last {
-      self.continueBtn = nextBtn
-      continueBtn?.addTarget(
-        self,
-        action: #selector(didTapOnDoneOrNextBtn),
-        for: .touchUpInside
-      )
-    } else {
-      fatalError("Couldn't able to find continue Button")
-    }
-  }
 
   // MARK: - UI
 
